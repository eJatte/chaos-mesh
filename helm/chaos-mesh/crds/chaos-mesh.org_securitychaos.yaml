
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: securitychaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: SecurityChaos
    listKind: SecurityChaosList
    plural: securitychaos
    singular: securitychaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: SecurityChaos is the Schema for the SecurityChaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecurityChaosSpec is the content of the specification for a
            SecurityChaos
          properties:
            action:
              description: 'Action defines the specific security chaos action. Supported
                action: run-as-root / run-as-privileged / delete-file / list-secrets
                / create-pod / kubelet-api / test Default action: run-as-root'
              enum:
              - run-as-root
              - run-as-privileged
              - delete-file
              - list-secrets
              - create-pod
              - kubelet-api
              - test
              type: string
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            gid:
              description: GID specifies the gid to use in the experiment, needed
                in delete file experiment.
              format: int64
              type: integer
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              type: string
            namespace:
              description: 'NameSpace defines the namespace that the chaos experiment
                should be applied in. Default namespace: default'
              type: string
            podsecuritycontext:
              description: PodSecurityContext specifies a pod security contex, used
                in the create-pod experiment
              properties:
                fsGroup:
                  description: "A special supplemental group that applies to all containers
                    in a pod. Some volume types allow the Kubelet to change the ownership
                    of that volume to be owned by the pod: \n 1. The owning GID will
                    be the FSGroup 2. The setgid bit is set (new files created in
                    the volume will be owned by FSGroup) 3. The permission bits are
                    OR'd with rw-rw---- \n If unset, the Kubelet will not modify the
                    ownership and permissions of any volume."
                  format: int64
                  type: integer
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in SecurityContext.  If set
                    in both SecurityContext and PodSecurityContext, the value specified
                    in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in SecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: The SELinux context to be applied to all containers.
                    If unspecified, the container runtime will allocate a random SELinux
                    context for each container.  May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                supplementalGroups:
                  description: A list of groups applied to the first process run in
                    each container, in addition to the container's primary GID.  If
                    unspecified, no groups will be added to any container.
                  items:
                    format: int64
                    type: integer
                  type: array
                sysctls:
                  description: Sysctls hold a list of namespaced sysctls used for
                    the pod. Pods with unsupported sysctls (by the container runtime)
                    might fail to launch.
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                windowsOptions:
                  description: The Windows specific settings applied to all containers.
                    If unspecified, the options within a container's SecurityContext
                    will be used. If set in both SecurityContext and PodSecurityContext,
                    the value specified in SecurityContext takes precedence.
                  properties:
                    gmsaCredentialSpec:
                      description: GMSACredentialSpec is where the GMSA admission
                        webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                        inlines the contents of the GMSA credential spec named by
                        the GMSACredentialSpecName field. This field is alpha-level
                        and is only honored by servers that enable the WindowsGMSA
                        feature flag.
                      type: string
                    gmsaCredentialSpecName:
                      description: GMSACredentialSpecName is the name of the GMSA
                        credential spec to use. This field is alpha-level and is only
                        honored by servers that enable the WindowsGMSA feature flag.
                      type: string
                    runAsUserName:
                      description: The UserName in Windows to run the entrypoint of
                        the container process. Defaults to the user specified in image
                        metadata if unspecified. May also be set in PodSecurityContext.
                        If set in both SecurityContext and PodSecurityContext, the
                        value specified in SecurityContext takes precedence. This
                        field is beta-level and may be disabled with the WindowsRunAsUserName
                        feature flag.
                      type: string
                  type: object
              type: object
            pvclaim:
              description: PvClaim specifies the persistent volume claim.
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about time.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            securitycontext:
              description: SecurityContext specifies a security contex, used in the
                create-pod experiment
              properties:
                allowPrivilegeEscalation:
                  description: 'AllowPrivilegeEscalation controls whether a process
                    can gain more privileges than its parent process. This bool directly
                    controls if the no_new_privs flag will be set on the container
                    process. AllowPrivilegeEscalation is true always when the container
                    is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                  type: boolean
                capabilities:
                  description: The capabilities to add/drop when running containers.
                    Defaults to the default set of capabilities granted by the container
                    runtime.
                  properties:
                    add:
                      description: Added capabilities
                      items:
                        description: Capability represent POSIX capabilities type
                        type: string
                      type: array
                    drop:
                      description: Removed capabilities
                      items:
                        description: Capability represent POSIX capabilities type
                        type: string
                      type: array
                  type: object
                privileged:
                  description: Run container in privileged mode. Processes in privileged
                    containers are essentially equivalent to root on the host. Defaults
                    to false.
                  type: boolean
                procMount:
                  description: procMount denotes the type of proc mount to use for
                    the containers. The default is DefaultProcMount which uses the
                    container runtime defaults for readonly paths and masked paths.
                    This requires the ProcMountType feature flag to be enabled.
                  type: string
                readOnlyRootFilesystem:
                  description: Whether this container has a read-only root filesystem.
                    Default is false.
                  type: boolean
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in PodSecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in PodSecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in PodSecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: The SELinux context to be applied to the container.
                    If unspecified, the container runtime will allocate a random SELinux
                    context for each container.  May also be set in PodSecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence.
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                windowsOptions:
                  description: The Windows specific settings applied to all containers.
                    If unspecified, the options from the PodSecurityContext will be
                    used. If set in both SecurityContext and PodSecurityContext, the
                    value specified in SecurityContext takes precedence.
                  properties:
                    gmsaCredentialSpec:
                      description: GMSACredentialSpec is where the GMSA admission
                        webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                        inlines the contents of the GMSA credential spec named by
                        the GMSACredentialSpecName field. This field is alpha-level
                        and is only honored by servers that enable the WindowsGMSA
                        feature flag.
                      type: string
                    gmsaCredentialSpecName:
                      description: GMSACredentialSpecName is the name of the GMSA
                        credential spec to use. This field is alpha-level and is only
                        honored by servers that enable the WindowsGMSA feature flag.
                      type: string
                    runAsUserName:
                      description: The UserName in Windows to run the entrypoint of
                        the container process. Defaults to the user specified in image
                        metadata if unspecified. May also be set in PodSecurityContext.
                        If set in both SecurityContext and PodSecurityContext, the
                        value specified in SecurityContext takes precedence. This
                        field is beta-level and may be disabled with the WindowsRunAsUserName
                        feature flag.
                      type: string
                  type: object
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            uid:
              description: UID specifies the uid to use in the experiment, needed
                in delete file experiment.
              format: int64
              type: integer
            user:
              description: User specifies a kubernetes user. Used in the list secrets
                experiment.
              type: string
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          type: object
        status:
          description: SecurityChaosStatus represents the status of a SecurityChaos
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                action:
                  type: string
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                message:
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
