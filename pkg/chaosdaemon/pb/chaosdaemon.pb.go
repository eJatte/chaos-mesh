// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaosdaemon.proto

package pb

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	empty "github.com/golang/protobuf/ptypes/empty"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Chain_Direction int32

const (
	Chain_INPUT  Chain_Direction = 0
	Chain_OUTPUT Chain_Direction = 1
)

var Chain_Direction_name = map[int32]string{
	0: "INPUT",
	1: "OUTPUT",
}
var Chain_Direction_value = map[string]int32{
	"INPUT":  0,
	"OUTPUT": 1,
}

func (x Chain_Direction) String() string {
	return proto.EnumName(Chain_Direction_name, int32(x))
}
func (Chain_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{16, 0}
}

type ContainerAction_Action int32

const (
	ContainerAction_KILL   ContainerAction_Action = 0
	ContainerAction_GETPID ContainerAction_Action = 1
)

var ContainerAction_Action_name = map[int32]string{
	0: "KILL",
	1: "GETPID",
}
var ContainerAction_Action_value = map[string]int32{
	"KILL":   0,
	"GETPID": 1,
}

func (x ContainerAction_Action) String() string {
	return proto.EnumName(ContainerAction_Action_name, int32(x))
}
func (ContainerAction_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{18, 0}
}

type ExecStressRequest_Scope int32

const (
	ExecStressRequest_CONTAINER ExecStressRequest_Scope = 0
	ExecStressRequest_POD       ExecStressRequest_Scope = 1
)

var ExecStressRequest_Scope_name = map[int32]string{
	0: "CONTAINER",
	1: "POD",
}
var ExecStressRequest_Scope_value = map[string]int32{
	"CONTAINER": 0,
	"POD":       1,
}

func (x ExecStressRequest_Scope) String() string {
	return proto.EnumName(ExecStressRequest_Scope_name, int32(x))
}
func (ExecStressRequest_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{19, 0}
}

type Tc_Type int32

const (
	Tc_NETEM     Tc_Type = 0
	Tc_BANDWIDTH Tc_Type = 1
)

var Tc_Type_name = map[int32]string{
	0: "NETEM",
	1: "BANDWIDTH",
}
var Tc_Type_value = map[string]int32{
	"NETEM":     0,
	"BANDWIDTH": 1,
}

func (x Tc_Type) String() string {
	return proto.EnumName(Tc_Type_name, int32(x))
}
func (Tc_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{25, 0}
}

type TcHandle struct {
	Major                uint32   `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor                uint32   `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcHandle) Reset()         { *m = TcHandle{} }
func (m *TcHandle) String() string { return proto.CompactTextString(m) }
func (*TcHandle) ProtoMessage()    {}
func (*TcHandle) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{0}
}
func (m *TcHandle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcHandle.Unmarshal(m, b)
}
func (m *TcHandle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcHandle.Marshal(b, m, deterministic)
}
func (dst *TcHandle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcHandle.Merge(dst, src)
}
func (m *TcHandle) XXX_Size() int {
	return xxx_messageInfo_TcHandle.Size(m)
}
func (m *TcHandle) XXX_DiscardUnknown() {
	xxx_messageInfo_TcHandle.DiscardUnknown(m)
}

var xxx_messageInfo_TcHandle proto.InternalMessageInfo

func (m *TcHandle) GetMajor() uint32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *TcHandle) GetMinor() uint32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

type ContainerRequest struct {
	Action               *ContainerAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	ContainerId          string           `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ContainerRequest) Reset()         { *m = ContainerRequest{} }
func (m *ContainerRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerRequest) ProtoMessage()    {}
func (*ContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{1}
}
func (m *ContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerRequest.Unmarshal(m, b)
}
func (m *ContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRequest.Merge(dst, src)
}
func (m *ContainerRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerRequest.Size(m)
}
func (m *ContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRequest proto.InternalMessageInfo

func (m *ContainerRequest) GetAction() *ContainerAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type ContainerResponse struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerResponse) Reset()         { *m = ContainerResponse{} }
func (m *ContainerResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerResponse) ProtoMessage()    {}
func (*ContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{2}
}
func (m *ContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerResponse.Unmarshal(m, b)
}
func (m *ContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerResponse.Merge(dst, src)
}
func (m *ContainerResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerResponse.Size(m)
}
func (m *ContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerResponse proto.InternalMessageInfo

func (m *ContainerResponse) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type NetemRequest struct {
	Netem                *Netem    `protobuf:"bytes,1,opt,name=netem,proto3" json:"netem,omitempty"`
	ContainerId          string    `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Handle               *TcHandle `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	Parent               *TcHandle `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NetemRequest) Reset()         { *m = NetemRequest{} }
func (m *NetemRequest) String() string { return proto.CompactTextString(m) }
func (*NetemRequest) ProtoMessage()    {}
func (*NetemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{3}
}
func (m *NetemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetemRequest.Unmarshal(m, b)
}
func (m *NetemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetemRequest.Marshal(b, m, deterministic)
}
func (dst *NetemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetemRequest.Merge(dst, src)
}
func (m *NetemRequest) XXX_Size() int {
	return xxx_messageInfo_NetemRequest.Size(m)
}
func (m *NetemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetemRequest proto.InternalMessageInfo

func (m *NetemRequest) GetNetem() *Netem {
	if m != nil {
		return m.Netem
	}
	return nil
}

func (m *NetemRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *NetemRequest) GetHandle() *TcHandle {
	if m != nil {
		return m.Handle
	}
	return nil
}

func (m *NetemRequest) GetParent() *TcHandle {
	if m != nil {
		return m.Parent
	}
	return nil
}

type Netem struct {
	Time                 uint32    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Jitter               uint32    `protobuf:"varint,2,opt,name=jitter,proto3" json:"jitter,omitempty"`
	DelayCorr            float32   `protobuf:"fixed32,3,opt,name=delay_corr,json=delayCorr,proto3" json:"delay_corr,omitempty"`
	Limit                uint32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Loss                 float32   `protobuf:"fixed32,5,opt,name=loss,proto3" json:"loss,omitempty"`
	LossCorr             float32   `protobuf:"fixed32,6,opt,name=loss_corr,json=lossCorr,proto3" json:"loss_corr,omitempty"`
	Gap                  uint32    `protobuf:"varint,7,opt,name=gap,proto3" json:"gap,omitempty"`
	Duplicate            float32   `protobuf:"fixed32,8,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	DuplicateCorr        float32   `protobuf:"fixed32,9,opt,name=duplicate_corr,json=duplicateCorr,proto3" json:"duplicate_corr,omitempty"`
	Reorder              float32   `protobuf:"fixed32,10,opt,name=reorder,proto3" json:"reorder,omitempty"`
	ReorderCorr          float32   `protobuf:"fixed32,11,opt,name=reorder_corr,json=reorderCorr,proto3" json:"reorder_corr,omitempty"`
	Corrupt              float32   `protobuf:"fixed32,12,opt,name=corrupt,proto3" json:"corrupt,omitempty"`
	CorruptCorr          float32   `protobuf:"fixed32,13,opt,name=corrupt_corr,json=corruptCorr,proto3" json:"corrupt_corr,omitempty"`
	Parent               *TcHandle `protobuf:"bytes,14,opt,name=parent,proto3" json:"parent,omitempty"`
	Handle               *TcHandle `protobuf:"bytes,15,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Netem) Reset()         { *m = Netem{} }
func (m *Netem) String() string { return proto.CompactTextString(m) }
func (*Netem) ProtoMessage()    {}
func (*Netem) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{4}
}
func (m *Netem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Netem.Unmarshal(m, b)
}
func (m *Netem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Netem.Marshal(b, m, deterministic)
}
func (dst *Netem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Netem.Merge(dst, src)
}
func (m *Netem) XXX_Size() int {
	return xxx_messageInfo_Netem.Size(m)
}
func (m *Netem) XXX_DiscardUnknown() {
	xxx_messageInfo_Netem.DiscardUnknown(m)
}

var xxx_messageInfo_Netem proto.InternalMessageInfo

func (m *Netem) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Netem) GetJitter() uint32 {
	if m != nil {
		return m.Jitter
	}
	return 0
}

func (m *Netem) GetDelayCorr() float32 {
	if m != nil {
		return m.DelayCorr
	}
	return 0
}

func (m *Netem) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Netem) GetLoss() float32 {
	if m != nil {
		return m.Loss
	}
	return 0
}

func (m *Netem) GetLossCorr() float32 {
	if m != nil {
		return m.LossCorr
	}
	return 0
}

func (m *Netem) GetGap() uint32 {
	if m != nil {
		return m.Gap
	}
	return 0
}

func (m *Netem) GetDuplicate() float32 {
	if m != nil {
		return m.Duplicate
	}
	return 0
}

func (m *Netem) GetDuplicateCorr() float32 {
	if m != nil {
		return m.DuplicateCorr
	}
	return 0
}

func (m *Netem) GetReorder() float32 {
	if m != nil {
		return m.Reorder
	}
	return 0
}

func (m *Netem) GetReorderCorr() float32 {
	if m != nil {
		return m.ReorderCorr
	}
	return 0
}

func (m *Netem) GetCorrupt() float32 {
	if m != nil {
		return m.Corrupt
	}
	return 0
}

func (m *Netem) GetCorruptCorr() float32 {
	if m != nil {
		return m.CorruptCorr
	}
	return 0
}

func (m *Netem) GetParent() *TcHandle {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Netem) GetHandle() *TcHandle {
	if m != nil {
		return m.Handle
	}
	return nil
}

type TbfRequest struct {
	Tbf                  *Tbf     `protobuf:"bytes,1,opt,name=tbf,proto3" json:"tbf,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TbfRequest) Reset()         { *m = TbfRequest{} }
func (m *TbfRequest) String() string { return proto.CompactTextString(m) }
func (*TbfRequest) ProtoMessage()    {}
func (*TbfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{5}
}
func (m *TbfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TbfRequest.Unmarshal(m, b)
}
func (m *TbfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TbfRequest.Marshal(b, m, deterministic)
}
func (dst *TbfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TbfRequest.Merge(dst, src)
}
func (m *TbfRequest) XXX_Size() int {
	return xxx_messageInfo_TbfRequest.Size(m)
}
func (m *TbfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TbfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TbfRequest proto.InternalMessageInfo

func (m *TbfRequest) GetTbf() *Tbf {
	if m != nil {
		return m.Tbf
	}
	return nil
}

func (m *TbfRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type Tbf struct {
	Rate                 uint64   `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Buffer               uint32   `protobuf:"varint,3,opt,name=buffer,proto3" json:"buffer,omitempty"`
	PeakRate             uint64   `protobuf:"varint,4,opt,name=peak_rate,json=peakRate,proto3" json:"peak_rate,omitempty"`
	MinBurst             uint32   `protobuf:"varint,5,opt,name=min_burst,json=minBurst,proto3" json:"min_burst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tbf) Reset()         { *m = Tbf{} }
func (m *Tbf) String() string { return proto.CompactTextString(m) }
func (*Tbf) ProtoMessage()    {}
func (*Tbf) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{6}
}
func (m *Tbf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tbf.Unmarshal(m, b)
}
func (m *Tbf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tbf.Marshal(b, m, deterministic)
}
func (dst *Tbf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tbf.Merge(dst, src)
}
func (m *Tbf) XXX_Size() int {
	return xxx_messageInfo_Tbf.Size(m)
}
func (m *Tbf) XXX_DiscardUnknown() {
	xxx_messageInfo_Tbf.DiscardUnknown(m)
}

var xxx_messageInfo_Tbf proto.InternalMessageInfo

func (m *Tbf) GetRate() uint64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Tbf) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Tbf) GetBuffer() uint32 {
	if m != nil {
		return m.Buffer
	}
	return 0
}

func (m *Tbf) GetPeakRate() uint64 {
	if m != nil {
		return m.PeakRate
	}
	return 0
}

func (m *Tbf) GetMinBurst() uint32 {
	if m != nil {
		return m.MinBurst
	}
	return 0
}

type QdiscRequest struct {
	Qdisc                *Qdisc   `protobuf:"bytes,1,opt,name=qdisc,proto3" json:"qdisc,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QdiscRequest) Reset()         { *m = QdiscRequest{} }
func (m *QdiscRequest) String() string { return proto.CompactTextString(m) }
func (*QdiscRequest) ProtoMessage()    {}
func (*QdiscRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{7}
}
func (m *QdiscRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QdiscRequest.Unmarshal(m, b)
}
func (m *QdiscRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QdiscRequest.Marshal(b, m, deterministic)
}
func (dst *QdiscRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QdiscRequest.Merge(dst, src)
}
func (m *QdiscRequest) XXX_Size() int {
	return xxx_messageInfo_QdiscRequest.Size(m)
}
func (m *QdiscRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QdiscRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QdiscRequest proto.InternalMessageInfo

func (m *QdiscRequest) GetQdisc() *Qdisc {
	if m != nil {
		return m.Qdisc
	}
	return nil
}

func (m *QdiscRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type Qdisc struct {
	Parent               *TcHandle `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Handle               *TcHandle `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Type                 string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Args                 []string  `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Qdisc) Reset()         { *m = Qdisc{} }
func (m *Qdisc) String() string { return proto.CompactTextString(m) }
func (*Qdisc) ProtoMessage()    {}
func (*Qdisc) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{8}
}
func (m *Qdisc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qdisc.Unmarshal(m, b)
}
func (m *Qdisc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qdisc.Marshal(b, m, deterministic)
}
func (dst *Qdisc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qdisc.Merge(dst, src)
}
func (m *Qdisc) XXX_Size() int {
	return xxx_messageInfo_Qdisc.Size(m)
}
func (m *Qdisc) XXX_DiscardUnknown() {
	xxx_messageInfo_Qdisc.DiscardUnknown(m)
}

var xxx_messageInfo_Qdisc proto.InternalMessageInfo

func (m *Qdisc) GetParent() *TcHandle {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Qdisc) GetHandle() *TcHandle {
	if m != nil {
		return m.Handle
	}
	return nil
}

func (m *Qdisc) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Qdisc) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type EmatchFilterRequest struct {
	Filter               *EmatchFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	ContainerId          string        `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EmatchFilterRequest) Reset()         { *m = EmatchFilterRequest{} }
func (m *EmatchFilterRequest) String() string { return proto.CompactTextString(m) }
func (*EmatchFilterRequest) ProtoMessage()    {}
func (*EmatchFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{9}
}
func (m *EmatchFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmatchFilterRequest.Unmarshal(m, b)
}
func (m *EmatchFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmatchFilterRequest.Marshal(b, m, deterministic)
}
func (dst *EmatchFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmatchFilterRequest.Merge(dst, src)
}
func (m *EmatchFilterRequest) XXX_Size() int {
	return xxx_messageInfo_EmatchFilterRequest.Size(m)
}
func (m *EmatchFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmatchFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmatchFilterRequest proto.InternalMessageInfo

func (m *EmatchFilterRequest) GetFilter() *EmatchFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *EmatchFilterRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type EmatchFilter struct {
	Match                string    `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Parent               *TcHandle `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Classid              *TcHandle `protobuf:"bytes,3,opt,name=classid,proto3" json:"classid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmatchFilter) Reset()         { *m = EmatchFilter{} }
func (m *EmatchFilter) String() string { return proto.CompactTextString(m) }
func (*EmatchFilter) ProtoMessage()    {}
func (*EmatchFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{10}
}
func (m *EmatchFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmatchFilter.Unmarshal(m, b)
}
func (m *EmatchFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmatchFilter.Marshal(b, m, deterministic)
}
func (dst *EmatchFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmatchFilter.Merge(dst, src)
}
func (m *EmatchFilter) XXX_Size() int {
	return xxx_messageInfo_EmatchFilter.Size(m)
}
func (m *EmatchFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmatchFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EmatchFilter proto.InternalMessageInfo

func (m *EmatchFilter) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *EmatchFilter) GetParent() *TcHandle {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *EmatchFilter) GetClassid() *TcHandle {
	if m != nil {
		return m.Classid
	}
	return nil
}

type TcFilterRequest struct {
	Filter               *TcFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	ContainerId          string    `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TcFilterRequest) Reset()         { *m = TcFilterRequest{} }
func (m *TcFilterRequest) String() string { return proto.CompactTextString(m) }
func (*TcFilterRequest) ProtoMessage()    {}
func (*TcFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{11}
}
func (m *TcFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcFilterRequest.Unmarshal(m, b)
}
func (m *TcFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcFilterRequest.Marshal(b, m, deterministic)
}
func (dst *TcFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcFilterRequest.Merge(dst, src)
}
func (m *TcFilterRequest) XXX_Size() int {
	return xxx_messageInfo_TcFilterRequest.Size(m)
}
func (m *TcFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TcFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TcFilterRequest proto.InternalMessageInfo

func (m *TcFilterRequest) GetFilter() *TcFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TcFilterRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type TcFilter struct {
	Parent               *TcHandle `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TcFilter) Reset()         { *m = TcFilter{} }
func (m *TcFilter) String() string { return proto.CompactTextString(m) }
func (*TcFilter) ProtoMessage()    {}
func (*TcFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{12}
}
func (m *TcFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcFilter.Unmarshal(m, b)
}
func (m *TcFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcFilter.Marshal(b, m, deterministic)
}
func (dst *TcFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcFilter.Merge(dst, src)
}
func (m *TcFilter) XXX_Size() int {
	return xxx_messageInfo_TcFilter.Size(m)
}
func (m *TcFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TcFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TcFilter proto.InternalMessageInfo

func (m *TcFilter) GetParent() *TcHandle {
	if m != nil {
		return m.Parent
	}
	return nil
}

type IPSetsRequest struct {
	Ipsets               []*IPSet `protobuf:"bytes,1,rep,name=ipsets,proto3" json:"ipsets,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	EnterNS              bool     `protobuf:"varint,3,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPSetsRequest) Reset()         { *m = IPSetsRequest{} }
func (m *IPSetsRequest) String() string { return proto.CompactTextString(m) }
func (*IPSetsRequest) ProtoMessage()    {}
func (*IPSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{13}
}
func (m *IPSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSetsRequest.Unmarshal(m, b)
}
func (m *IPSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSetsRequest.Marshal(b, m, deterministic)
}
func (dst *IPSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSetsRequest.Merge(dst, src)
}
func (m *IPSetsRequest) XXX_Size() int {
	return xxx_messageInfo_IPSetsRequest.Size(m)
}
func (m *IPSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IPSetsRequest proto.InternalMessageInfo

func (m *IPSetsRequest) GetIpsets() []*IPSet {
	if m != nil {
		return m.Ipsets
	}
	return nil
}

func (m *IPSetsRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *IPSetsRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type IPSet struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidrs                []string `protobuf:"bytes,2,rep,name=cidrs,proto3" json:"cidrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPSet) Reset()         { *m = IPSet{} }
func (m *IPSet) String() string { return proto.CompactTextString(m) }
func (*IPSet) ProtoMessage()    {}
func (*IPSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{14}
}
func (m *IPSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSet.Unmarshal(m, b)
}
func (m *IPSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSet.Marshal(b, m, deterministic)
}
func (dst *IPSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSet.Merge(dst, src)
}
func (m *IPSet) XXX_Size() int {
	return xxx_messageInfo_IPSet.Size(m)
}
func (m *IPSet) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSet.DiscardUnknown(m)
}

var xxx_messageInfo_IPSet proto.InternalMessageInfo

func (m *IPSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IPSet) GetCidrs() []string {
	if m != nil {
		return m.Cidrs
	}
	return nil
}

type IptablesChainsRequest struct {
	Chains               []*Chain `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	EnterNS              bool     `protobuf:"varint,3,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IptablesChainsRequest) Reset()         { *m = IptablesChainsRequest{} }
func (m *IptablesChainsRequest) String() string { return proto.CompactTextString(m) }
func (*IptablesChainsRequest) ProtoMessage()    {}
func (*IptablesChainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{15}
}
func (m *IptablesChainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IptablesChainsRequest.Unmarshal(m, b)
}
func (m *IptablesChainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IptablesChainsRequest.Marshal(b, m, deterministic)
}
func (dst *IptablesChainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IptablesChainsRequest.Merge(dst, src)
}
func (m *IptablesChainsRequest) XXX_Size() int {
	return xxx_messageInfo_IptablesChainsRequest.Size(m)
}
func (m *IptablesChainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IptablesChainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IptablesChainsRequest proto.InternalMessageInfo

func (m *IptablesChainsRequest) GetChains() []*Chain {
	if m != nil {
		return m.Chains
	}
	return nil
}

func (m *IptablesChainsRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *IptablesChainsRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type Chain struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Direction            Chain_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=pb.Chain_Direction" json:"direction,omitempty"`
	Ipsets               []string        `protobuf:"bytes,3,rep,name=ipsets,proto3" json:"ipsets,omitempty"`
	Target               string          `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Protocol             string          `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SourcePorts          string          `protobuf:"bytes,6,opt,name=source_ports,json=sourcePorts,proto3" json:"source_ports,omitempty"`
	DestinationPorts     string          `protobuf:"bytes,7,opt,name=destination_ports,json=destinationPorts,proto3" json:"destination_ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{16}
}
func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (dst *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(dst, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Chain) GetDirection() Chain_Direction {
	if m != nil {
		return m.Direction
	}
	return Chain_INPUT
}

func (m *Chain) GetIpsets() []string {
	if m != nil {
		return m.Ipsets
	}
	return nil
}

func (m *Chain) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Chain) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Chain) GetSourcePorts() string {
	if m != nil {
		return m.SourcePorts
	}
	return ""
}

func (m *Chain) GetDestinationPorts() string {
	if m != nil {
		return m.DestinationPorts
	}
	return ""
}

type TimeRequest struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Sec                  int64    `protobuf:"varint,2,opt,name=sec,proto3" json:"sec,omitempty"`
	Nsec                 int64    `protobuf:"varint,3,opt,name=nsec,proto3" json:"nsec,omitempty"`
	ClkIdsMask           uint64   `protobuf:"varint,4,opt,name=clk_ids_mask,json=clkIdsMask,proto3" json:"clk_ids_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRequest) Reset()         { *m = TimeRequest{} }
func (m *TimeRequest) String() string { return proto.CompactTextString(m) }
func (*TimeRequest) ProtoMessage()    {}
func (*TimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{17}
}
func (m *TimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRequest.Unmarshal(m, b)
}
func (m *TimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRequest.Marshal(b, m, deterministic)
}
func (dst *TimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRequest.Merge(dst, src)
}
func (m *TimeRequest) XXX_Size() int {
	return xxx_messageInfo_TimeRequest.Size(m)
}
func (m *TimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRequest proto.InternalMessageInfo

func (m *TimeRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *TimeRequest) GetSec() int64 {
	if m != nil {
		return m.Sec
	}
	return 0
}

func (m *TimeRequest) GetNsec() int64 {
	if m != nil {
		return m.Nsec
	}
	return 0
}

func (m *TimeRequest) GetClkIdsMask() uint64 {
	if m != nil {
		return m.ClkIdsMask
	}
	return 0
}

type ContainerAction struct {
	Action               ContainerAction_Action `protobuf:"varint,1,opt,name=action,proto3,enum=pb.ContainerAction_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ContainerAction) Reset()         { *m = ContainerAction{} }
func (m *ContainerAction) String() string { return proto.CompactTextString(m) }
func (*ContainerAction) ProtoMessage()    {}
func (*ContainerAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{18}
}
func (m *ContainerAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerAction.Unmarshal(m, b)
}
func (m *ContainerAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerAction.Marshal(b, m, deterministic)
}
func (dst *ContainerAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerAction.Merge(dst, src)
}
func (m *ContainerAction) XXX_Size() int {
	return xxx_messageInfo_ContainerAction.Size(m)
}
func (m *ContainerAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerAction.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerAction proto.InternalMessageInfo

func (m *ContainerAction) GetAction() ContainerAction_Action {
	if m != nil {
		return m.Action
	}
	return ContainerAction_KILL
}

type ExecStressRequest struct {
	Scope                ExecStressRequest_Scope `protobuf:"varint,1,opt,name=scope,proto3,enum=pb.ExecStressRequest_Scope" json:"scope,omitempty"`
	Target               string                  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Stressors            string                  `protobuf:"bytes,3,opt,name=stressors,proto3" json:"stressors,omitempty"`
	EnterNS              bool                    `protobuf:"varint,4,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExecStressRequest) Reset()         { *m = ExecStressRequest{} }
func (m *ExecStressRequest) String() string { return proto.CompactTextString(m) }
func (*ExecStressRequest) ProtoMessage()    {}
func (*ExecStressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{19}
}
func (m *ExecStressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStressRequest.Unmarshal(m, b)
}
func (m *ExecStressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStressRequest.Marshal(b, m, deterministic)
}
func (dst *ExecStressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStressRequest.Merge(dst, src)
}
func (m *ExecStressRequest) XXX_Size() int {
	return xxx_messageInfo_ExecStressRequest.Size(m)
}
func (m *ExecStressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStressRequest proto.InternalMessageInfo

func (m *ExecStressRequest) GetScope() ExecStressRequest_Scope {
	if m != nil {
		return m.Scope
	}
	return ExecStressRequest_CONTAINER
}

func (m *ExecStressRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ExecStressRequest) GetStressors() string {
	if m != nil {
		return m.Stressors
	}
	return ""
}

func (m *ExecStressRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type ExecStressResponse struct {
	Instance             string   `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStressResponse) Reset()         { *m = ExecStressResponse{} }
func (m *ExecStressResponse) String() string { return proto.CompactTextString(m) }
func (*ExecStressResponse) ProtoMessage()    {}
func (*ExecStressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{20}
}
func (m *ExecStressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStressResponse.Unmarshal(m, b)
}
func (m *ExecStressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStressResponse.Marshal(b, m, deterministic)
}
func (dst *ExecStressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStressResponse.Merge(dst, src)
}
func (m *ExecStressResponse) XXX_Size() int {
	return xxx_messageInfo_ExecStressResponse.Size(m)
}
func (m *ExecStressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStressResponse proto.InternalMessageInfo

func (m *ExecStressResponse) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *ExecStressResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type CancelStressRequest struct {
	Instance             string   `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelStressRequest) Reset()         { *m = CancelStressRequest{} }
func (m *CancelStressRequest) String() string { return proto.CompactTextString(m) }
func (*CancelStressRequest) ProtoMessage()    {}
func (*CancelStressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{21}
}
func (m *CancelStressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelStressRequest.Unmarshal(m, b)
}
func (m *CancelStressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelStressRequest.Marshal(b, m, deterministic)
}
func (dst *CancelStressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelStressRequest.Merge(dst, src)
}
func (m *CancelStressRequest) XXX_Size() int {
	return xxx_messageInfo_CancelStressRequest.Size(m)
}
func (m *CancelStressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelStressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelStressRequest proto.InternalMessageInfo

func (m *CancelStressRequest) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *CancelStressRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type ApplyIoChaosRequest struct {
	Actions              string   `protobuf:"bytes,1,opt,name=actions,proto3" json:"actions,omitempty"`
	Volume               string   `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	ContainerId          string   `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Instance             int64    `protobuf:"varint,4,opt,name=instance,proto3" json:"instance,omitempty"`
	StartTime            int64    `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EnterNS              bool     `protobuf:"varint,6,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyIoChaosRequest) Reset()         { *m = ApplyIoChaosRequest{} }
func (m *ApplyIoChaosRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyIoChaosRequest) ProtoMessage()    {}
func (*ApplyIoChaosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{22}
}
func (m *ApplyIoChaosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyIoChaosRequest.Unmarshal(m, b)
}
func (m *ApplyIoChaosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyIoChaosRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyIoChaosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyIoChaosRequest.Merge(dst, src)
}
func (m *ApplyIoChaosRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyIoChaosRequest.Size(m)
}
func (m *ApplyIoChaosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyIoChaosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyIoChaosRequest proto.InternalMessageInfo

func (m *ApplyIoChaosRequest) GetActions() string {
	if m != nil {
		return m.Actions
	}
	return ""
}

func (m *ApplyIoChaosRequest) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *ApplyIoChaosRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ApplyIoChaosRequest) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *ApplyIoChaosRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ApplyIoChaosRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type ApplyIoChaosResponse struct {
	Instance             int64    `protobuf:"varint,1,opt,name=instance,proto3" json:"instance,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyIoChaosResponse) Reset()         { *m = ApplyIoChaosResponse{} }
func (m *ApplyIoChaosResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyIoChaosResponse) ProtoMessage()    {}
func (*ApplyIoChaosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{23}
}
func (m *ApplyIoChaosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyIoChaosResponse.Unmarshal(m, b)
}
func (m *ApplyIoChaosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyIoChaosResponse.Marshal(b, m, deterministic)
}
func (dst *ApplyIoChaosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyIoChaosResponse.Merge(dst, src)
}
func (m *ApplyIoChaosResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyIoChaosResponse.Size(m)
}
func (m *ApplyIoChaosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyIoChaosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyIoChaosResponse proto.InternalMessageInfo

func (m *ApplyIoChaosResponse) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *ApplyIoChaosResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type TcsRequest struct {
	Tcs                  []*Tc    `protobuf:"bytes,1,rep,name=tcs,proto3" json:"tcs,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Device               string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	EnterNS              bool     `protobuf:"varint,4,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcsRequest) Reset()         { *m = TcsRequest{} }
func (m *TcsRequest) String() string { return proto.CompactTextString(m) }
func (*TcsRequest) ProtoMessage()    {}
func (*TcsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{24}
}
func (m *TcsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcsRequest.Unmarshal(m, b)
}
func (m *TcsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcsRequest.Marshal(b, m, deterministic)
}
func (dst *TcsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcsRequest.Merge(dst, src)
}
func (m *TcsRequest) XXX_Size() int {
	return xxx_messageInfo_TcsRequest.Size(m)
}
func (m *TcsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TcsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TcsRequest proto.InternalMessageInfo

func (m *TcsRequest) GetTcs() []*Tc {
	if m != nil {
		return m.Tcs
	}
	return nil
}

func (m *TcsRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *TcsRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *TcsRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type Tc struct {
	Type                 Tc_Type  `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Tc_Type" json:"type,omitempty"`
	Netem                *Netem   `protobuf:"bytes,2,opt,name=netem,proto3" json:"netem,omitempty"`
	Tbf                  *Tbf     `protobuf:"bytes,3,opt,name=tbf,proto3" json:"tbf,omitempty"`
	Ipset                string   `protobuf:"bytes,4,opt,name=ipset,proto3" json:"ipset,omitempty"`
	Protocol             string   `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SourcePort           string   `protobuf:"bytes,6,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	EgressPort           string   `protobuf:"bytes,7,opt,name=egress_port,json=egressPort,proto3" json:"egress_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tc) Reset()         { *m = Tc{} }
func (m *Tc) String() string { return proto.CompactTextString(m) }
func (*Tc) ProtoMessage()    {}
func (*Tc) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{25}
}
func (m *Tc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tc.Unmarshal(m, b)
}
func (m *Tc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tc.Marshal(b, m, deterministic)
}
func (dst *Tc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tc.Merge(dst, src)
}
func (m *Tc) XXX_Size() int {
	return xxx_messageInfo_Tc.Size(m)
}
func (m *Tc) XXX_DiscardUnknown() {
	xxx_messageInfo_Tc.DiscardUnknown(m)
}

var xxx_messageInfo_Tc proto.InternalMessageInfo

func (m *Tc) GetType() Tc_Type {
	if m != nil {
		return m.Type
	}
	return Tc_NETEM
}

func (m *Tc) GetNetem() *Netem {
	if m != nil {
		return m.Netem
	}
	return nil
}

func (m *Tc) GetTbf() *Tbf {
	if m != nil {
		return m.Tbf
	}
	return nil
}

func (m *Tc) GetIpset() string {
	if m != nil {
		return m.Ipset
	}
	return ""
}

func (m *Tc) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Tc) GetSourcePort() string {
	if m != nil {
		return m.SourcePort
	}
	return ""
}

func (m *Tc) GetEgressPort() string {
	if m != nil {
		return m.EgressPort
	}
	return ""
}

type SetDNSServerRequest struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	DnsServer            string   `protobuf:"bytes,2,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	Enable               bool     `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	EnterNS              bool     `protobuf:"varint,4,opt,name=enterNS,proto3" json:"enterNS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDNSServerRequest) Reset()         { *m = SetDNSServerRequest{} }
func (m *SetDNSServerRequest) String() string { return proto.CompactTextString(m) }
func (*SetDNSServerRequest) ProtoMessage()    {}
func (*SetDNSServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{26}
}
func (m *SetDNSServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDNSServerRequest.Unmarshal(m, b)
}
func (m *SetDNSServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDNSServerRequest.Marshal(b, m, deterministic)
}
func (dst *SetDNSServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDNSServerRequest.Merge(dst, src)
}
func (m *SetDNSServerRequest) XXX_Size() int {
	return xxx_messageInfo_SetDNSServerRequest.Size(m)
}
func (m *SetDNSServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDNSServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDNSServerRequest proto.InternalMessageInfo

func (m *SetDNSServerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *SetDNSServerRequest) GetDnsServer() string {
	if m != nil {
		return m.DnsServer
	}
	return ""
}

func (m *SetDNSServerRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *SetDNSServerRequest) GetEnterNS() bool {
	if m != nil {
		return m.EnterNS
	}
	return false
}

type ExecHelloWorldRequest struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecHelloWorldRequest) Reset()         { *m = ExecHelloWorldRequest{} }
func (m *ExecHelloWorldRequest) String() string { return proto.CompactTextString(m) }
func (*ExecHelloWorldRequest) ProtoMessage()    {}
func (*ExecHelloWorldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaosdaemon_5ee3628c6c759d8b, []int{27}
}
func (m *ExecHelloWorldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecHelloWorldRequest.Unmarshal(m, b)
}
func (m *ExecHelloWorldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecHelloWorldRequest.Marshal(b, m, deterministic)
}
func (dst *ExecHelloWorldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecHelloWorldRequest.Merge(dst, src)
}
func (m *ExecHelloWorldRequest) XXX_Size() int {
	return xxx_messageInfo_ExecHelloWorldRequest.Size(m)
}
func (m *ExecHelloWorldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecHelloWorldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecHelloWorldRequest proto.InternalMessageInfo

func (m *ExecHelloWorldRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func init() {
	proto.RegisterType((*TcHandle)(nil), "pb.TcHandle")
	proto.RegisterType((*ContainerRequest)(nil), "pb.ContainerRequest")
	proto.RegisterType((*ContainerResponse)(nil), "pb.ContainerResponse")
	proto.RegisterType((*NetemRequest)(nil), "pb.NetemRequest")
	proto.RegisterType((*Netem)(nil), "pb.Netem")
	proto.RegisterType((*TbfRequest)(nil), "pb.TbfRequest")
	proto.RegisterType((*Tbf)(nil), "pb.Tbf")
	proto.RegisterType((*QdiscRequest)(nil), "pb.QdiscRequest")
	proto.RegisterType((*Qdisc)(nil), "pb.Qdisc")
	proto.RegisterType((*EmatchFilterRequest)(nil), "pb.EmatchFilterRequest")
	proto.RegisterType((*EmatchFilter)(nil), "pb.EmatchFilter")
	proto.RegisterType((*TcFilterRequest)(nil), "pb.TcFilterRequest")
	proto.RegisterType((*TcFilter)(nil), "pb.TcFilter")
	proto.RegisterType((*IPSetsRequest)(nil), "pb.IPSetsRequest")
	proto.RegisterType((*IPSet)(nil), "pb.IPSet")
	proto.RegisterType((*IptablesChainsRequest)(nil), "pb.IptablesChainsRequest")
	proto.RegisterType((*Chain)(nil), "pb.Chain")
	proto.RegisterType((*TimeRequest)(nil), "pb.TimeRequest")
	proto.RegisterType((*ContainerAction)(nil), "pb.ContainerAction")
	proto.RegisterType((*ExecStressRequest)(nil), "pb.ExecStressRequest")
	proto.RegisterType((*ExecStressResponse)(nil), "pb.ExecStressResponse")
	proto.RegisterType((*CancelStressRequest)(nil), "pb.CancelStressRequest")
	proto.RegisterType((*ApplyIoChaosRequest)(nil), "pb.ApplyIoChaosRequest")
	proto.RegisterType((*ApplyIoChaosResponse)(nil), "pb.ApplyIoChaosResponse")
	proto.RegisterType((*TcsRequest)(nil), "pb.TcsRequest")
	proto.RegisterType((*Tc)(nil), "pb.Tc")
	proto.RegisterType((*SetDNSServerRequest)(nil), "pb.SetDNSServerRequest")
	proto.RegisterType((*ExecHelloWorldRequest)(nil), "pb.ExecHelloWorldRequest")
	proto.RegisterEnum("pb.Chain_Direction", Chain_Direction_name, Chain_Direction_value)
	proto.RegisterEnum("pb.ContainerAction_Action", ContainerAction_Action_name, ContainerAction_Action_value)
	proto.RegisterEnum("pb.ExecStressRequest_Scope", ExecStressRequest_Scope_name, ExecStressRequest_Scope_value)
	proto.RegisterEnum("pb.Tc_Type", Tc_Type_name, Tc_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChaosDaemonClient is the client API for ChaosDaemon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChaosDaemonClient interface {
	SetTcs(ctx context.Context, in *TcsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	FlushIPSets(ctx context.Context, in *IPSetsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetIptablesChains(ctx context.Context, in *IptablesChainsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetTimeOffset(ctx context.Context, in *TimeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RecoverTimeOffset(ctx context.Context, in *TimeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ContainerKill(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ContainerGetPid(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error)
	ExecStressors(ctx context.Context, in *ExecStressRequest, opts ...grpc.CallOption) (*ExecStressResponse, error)
	CancelStressors(ctx context.Context, in *CancelStressRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ApplyIoChaos(ctx context.Context, in *ApplyIoChaosRequest, opts ...grpc.CallOption) (*ApplyIoChaosResponse, error)
	SetDNSServer(ctx context.Context, in *SetDNSServerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ExecHelloWorldChaos(ctx context.Context, in *ExecHelloWorldRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type chaosDaemonClient struct {
	cc *grpc.ClientConn
}

func NewChaosDaemonClient(cc *grpc.ClientConn) ChaosDaemonClient {
	return &chaosDaemonClient{cc}
}

func (c *chaosDaemonClient) SetTcs(ctx context.Context, in *TcsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/SetTcs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) FlushIPSets(ctx context.Context, in *IPSetsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/FlushIPSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) SetIptablesChains(ctx context.Context, in *IptablesChainsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/SetIptablesChains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) SetTimeOffset(ctx context.Context, in *TimeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/SetTimeOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) RecoverTimeOffset(ctx context.Context, in *TimeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/RecoverTimeOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) ContainerKill(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/ContainerKill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) ContainerGetPid(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error) {
	out := new(ContainerResponse)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/ContainerGetPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) ExecStressors(ctx context.Context, in *ExecStressRequest, opts ...grpc.CallOption) (*ExecStressResponse, error) {
	out := new(ExecStressResponse)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/ExecStressors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) CancelStressors(ctx context.Context, in *CancelStressRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/CancelStressors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) ApplyIoChaos(ctx context.Context, in *ApplyIoChaosRequest, opts ...grpc.CallOption) (*ApplyIoChaosResponse, error) {
	out := new(ApplyIoChaosResponse)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/ApplyIoChaos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) SetDNSServer(ctx context.Context, in *SetDNSServerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/SetDNSServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosDaemonClient) ExecHelloWorldChaos(ctx context.Context, in *ExecHelloWorldRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ChaosDaemon/ExecHelloWorldChaos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChaosDaemonServer is the server API for ChaosDaemon service.
type ChaosDaemonServer interface {
	SetTcs(context.Context, *TcsRequest) (*empty.Empty, error)
	FlushIPSets(context.Context, *IPSetsRequest) (*empty.Empty, error)
	SetIptablesChains(context.Context, *IptablesChainsRequest) (*empty.Empty, error)
	SetTimeOffset(context.Context, *TimeRequest) (*empty.Empty, error)
	RecoverTimeOffset(context.Context, *TimeRequest) (*empty.Empty, error)
	ContainerKill(context.Context, *ContainerRequest) (*empty.Empty, error)
	ContainerGetPid(context.Context, *ContainerRequest) (*ContainerResponse, error)
	ExecStressors(context.Context, *ExecStressRequest) (*ExecStressResponse, error)
	CancelStressors(context.Context, *CancelStressRequest) (*empty.Empty, error)
	ApplyIoChaos(context.Context, *ApplyIoChaosRequest) (*ApplyIoChaosResponse, error)
	SetDNSServer(context.Context, *SetDNSServerRequest) (*empty.Empty, error)
	ExecHelloWorldChaos(context.Context, *ExecHelloWorldRequest) (*empty.Empty, error)
}

func RegisterChaosDaemonServer(s *grpc.Server, srv ChaosDaemonServer) {
	s.RegisterService(&_ChaosDaemon_serviceDesc, srv)
}

func _ChaosDaemon_SetTcs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TcsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).SetTcs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/SetTcs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).SetTcs(ctx, req.(*TcsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_FlushIPSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).FlushIPSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/FlushIPSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).FlushIPSets(ctx, req.(*IPSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_SetIptablesChains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IptablesChainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).SetIptablesChains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/SetIptablesChains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).SetIptablesChains(ctx, req.(*IptablesChainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_SetTimeOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).SetTimeOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/SetTimeOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).SetTimeOffset(ctx, req.(*TimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_RecoverTimeOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).RecoverTimeOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/RecoverTimeOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).RecoverTimeOffset(ctx, req.(*TimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_ContainerKill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).ContainerKill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/ContainerKill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).ContainerKill(ctx, req.(*ContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_ContainerGetPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).ContainerGetPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/ContainerGetPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).ContainerGetPid(ctx, req.(*ContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_ExecStressors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecStressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).ExecStressors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/ExecStressors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).ExecStressors(ctx, req.(*ExecStressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_CancelStressors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelStressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).CancelStressors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/CancelStressors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).CancelStressors(ctx, req.(*CancelStressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_ApplyIoChaos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyIoChaosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).ApplyIoChaos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/ApplyIoChaos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).ApplyIoChaos(ctx, req.(*ApplyIoChaosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_SetDNSServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDNSServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).SetDNSServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/SetDNSServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).SetDNSServer(ctx, req.(*SetDNSServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosDaemon_ExecHelloWorldChaos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecHelloWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosDaemonServer).ExecHelloWorldChaos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChaosDaemon/ExecHelloWorldChaos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosDaemonServer).ExecHelloWorldChaos(ctx, req.(*ExecHelloWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChaosDaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ChaosDaemon",
	HandlerType: (*ChaosDaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetTcs",
			Handler:    _ChaosDaemon_SetTcs_Handler,
		},
		{
			MethodName: "FlushIPSets",
			Handler:    _ChaosDaemon_FlushIPSets_Handler,
		},
		{
			MethodName: "SetIptablesChains",
			Handler:    _ChaosDaemon_SetIptablesChains_Handler,
		},
		{
			MethodName: "SetTimeOffset",
			Handler:    _ChaosDaemon_SetTimeOffset_Handler,
		},
		{
			MethodName: "RecoverTimeOffset",
			Handler:    _ChaosDaemon_RecoverTimeOffset_Handler,
		},
		{
			MethodName: "ContainerKill",
			Handler:    _ChaosDaemon_ContainerKill_Handler,
		},
		{
			MethodName: "ContainerGetPid",
			Handler:    _ChaosDaemon_ContainerGetPid_Handler,
		},
		{
			MethodName: "ExecStressors",
			Handler:    _ChaosDaemon_ExecStressors_Handler,
		},
		{
			MethodName: "CancelStressors",
			Handler:    _ChaosDaemon_CancelStressors_Handler,
		},
		{
			MethodName: "ApplyIoChaos",
			Handler:    _ChaosDaemon_ApplyIoChaos_Handler,
		},
		{
			MethodName: "SetDNSServer",
			Handler:    _ChaosDaemon_SetDNSServer_Handler,
		},
		{
			MethodName: "ExecHelloWorldChaos",
			Handler:    _ChaosDaemon_ExecHelloWorldChaos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaosdaemon.proto",
}

func init() { proto.RegisterFile("chaosdaemon.proto", fileDescriptor_chaosdaemon_5ee3628c6c759d8b) }

var fileDescriptor_chaosdaemon_5ee3628c6c759d8b = []byte{
	// 1569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcb, 0x6f, 0xdb, 0x46,
	0x13, 0xb7, 0x44, 0xbd, 0x38, 0x92, 0x6c, 0x99, 0x7e, 0x7c, 0x8c, 0x9d, 0xef, 0xb3, 0x43, 0x24,
	0x1f, 0x02, 0x04, 0x50, 0x1a, 0x17, 0xe8, 0x21, 0x87, 0xb6, 0x8e, 0xed, 0xc4, 0xca, 0x43, 0x76,
	0x29, 0x05, 0x01, 0x7a, 0x11, 0x28, 0x72, 0x65, 0x33, 0xa6, 0x48, 0x86, 0xbb, 0x72, 0x63, 0xe4,
	0xd4, 0x63, 0x2f, 0xfd, 0x13, 0x7a, 0xe8, 0x1f, 0xd1, 0xde, 0xfa, 0x6f, 0xf5, 0x5a, 0xcc, 0xec,
	0x52, 0xa2, 0x6c, 0x59, 0x55, 0xd3, 0x13, 0x77, 0x5e, 0xbf, 0x9d, 0x9d, 0x99, 0x9d, 0x59, 0xc2,
	0xaa, 0x7b, 0xee, 0x44, 0xdc, 0x73, 0xd8, 0x30, 0x0a, 0x9b, 0x71, 0x12, 0x89, 0xc8, 0xc8, 0xc7,
	0xfd, 0xad, 0xed, 0xb3, 0x28, 0x3a, 0x0b, 0xd8, 0x63, 0xe2, 0xf4, 0x47, 0x83, 0xc7, 0x6c, 0x18,
	0x8b, 0x2b, 0xa9, 0x60, 0x7d, 0x05, 0x95, 0xae, 0x7b, 0xec, 0x84, 0x5e, 0xc0, 0x8c, 0x75, 0x28,
	0x0e, 0x9d, 0xf7, 0x51, 0x62, 0xe6, 0x76, 0x73, 0x0f, 0xeb, 0xb6, 0x24, 0x88, 0xeb, 0x87, 0x51,
	0x62, 0xe6, 0x15, 0x17, 0x09, 0xab, 0x0f, 0x8d, 0x83, 0x28, 0x14, 0x8e, 0x1f, 0xb2, 0xc4, 0x66,
	0x1f, 0x46, 0x8c, 0x0b, 0xe3, 0x11, 0x94, 0x1c, 0x57, 0xf8, 0x51, 0x48, 0x00, 0xd5, 0xbd, 0xb5,
	0x66, 0xdc, 0x6f, 0x8e, 0xb5, 0xf6, 0x49, 0x64, 0x2b, 0x15, 0xe3, 0x1e, 0xd4, 0xdc, 0x54, 0xd4,
	0xf3, 0x3d, 0x42, 0xd7, 0xed, 0xea, 0x98, 0xd7, 0xf2, 0xac, 0x07, 0xb0, 0x9a, 0xd9, 0x83, 0xc7,
	0x51, 0xc8, 0x99, 0xd1, 0x00, 0x2d, 0xf6, 0x3d, 0xe5, 0x22, 0x2e, 0xad, 0x5f, 0x72, 0x50, 0x6b,
	0x33, 0xc1, 0x86, 0xa9, 0x1f, 0x3b, 0x50, 0x0c, 0x91, 0x56, 0x6e, 0xe8, 0xe8, 0x86, 0x54, 0x90,
	0xfc, 0x05, 0xf6, 0x36, 0xee, 0x43, 0xe9, 0x9c, 0xa2, 0x62, 0x6a, 0x04, 0x52, 0x43, 0x90, 0x34,
	0x52, 0xb6, 0x92, 0xa1, 0x56, 0xec, 0x24, 0x2c, 0x14, 0x66, 0x61, 0x96, 0x96, 0x94, 0x59, 0xbf,
	0x69, 0x50, 0xa4, 0xfd, 0x0d, 0x03, 0x0a, 0xc2, 0x1f, 0x32, 0xe5, 0x3d, 0xad, 0x8d, 0x4d, 0x28,
	0xbd, 0xf7, 0x85, 0x60, 0x69, 0x80, 0x15, 0x65, 0xfc, 0x17, 0xc0, 0x63, 0x81, 0x73, 0xd5, 0x73,
	0xa3, 0x24, 0x21, 0x2f, 0xf2, 0xb6, 0x4e, 0x9c, 0x83, 0x28, 0xa1, 0xb4, 0x04, 0xfe, 0xd0, 0x97,
	0x3b, 0xd7, 0x6d, 0x49, 0xe0, 0x06, 0x41, 0xc4, 0xb9, 0x59, 0x24, 0x75, 0x5a, 0x1b, 0xdb, 0xa0,
	0xe3, 0x57, 0xe2, 0x94, 0x48, 0x50, 0x41, 0x06, 0xc1, 0x34, 0x40, 0x3b, 0x73, 0x62, 0xb3, 0x2c,
	0xc3, 0x79, 0xe6, 0xc4, 0xc6, 0x5d, 0xd0, 0xbd, 0x51, 0x1c, 0xf8, 0xae, 0x23, 0x98, 0x59, 0x51,
	0xdb, 0xa6, 0x0c, 0xe3, 0x01, 0x2c, 0x8f, 0x09, 0x89, 0xa8, 0x93, 0x4a, 0x7d, 0xcc, 0x25, 0x58,
	0x13, 0xca, 0x09, 0x8b, 0x12, 0x8f, 0x25, 0x26, 0x90, 0x3c, 0x25, 0x31, 0xf6, 0x6a, 0x29, 0xcd,
	0xab, 0x24, 0xae, 0x2a, 0x5e, 0x6a, 0x8c, 0xa2, 0x51, 0x2c, 0xcc, 0x9a, 0x34, 0x56, 0xa4, 0x4c,
	0x1c, 0x2d, 0xa5, 0x71, 0x5d, 0x1a, 0x2b, 0x1e, 0x19, 0x4f, 0x52, 0xb2, 0x7c, 0x7b, 0x4a, 0x32,
	0xe9, 0x5d, 0xb9, 0x3d, 0xbd, 0xd6, 0x4b, 0x80, 0x6e, 0x7f, 0x90, 0x96, 0xd5, 0x1d, 0xd0, 0x44,
	0x7f, 0xa0, 0x8a, 0xaa, 0x4c, 0x06, 0xfd, 0x81, 0x8d, 0xbc, 0x45, 0x8a, 0xf9, 0xc7, 0x1c, 0x68,
	0xdd, 0xfe, 0x00, 0x33, 0x94, 0x60, 0x64, 0x11, 0xa6, 0x60, 0xd3, 0x7a, 0x92, 0xcb, 0x7c, 0x36,
	0x97, 0x9b, 0x50, 0xea, 0x8f, 0x06, 0x03, 0x26, 0x93, 0x5f, 0xb7, 0x15, 0x85, 0xf9, 0x8c, 0x99,
	0x73, 0xd1, 0x23, 0x98, 0x02, 0xc1, 0x54, 0x90, 0x61, 0x23, 0xd4, 0x36, 0xe8, 0x43, 0x3f, 0xec,
	0xf5, 0x47, 0x09, 0x17, 0x54, 0x05, 0x75, 0xbb, 0x32, 0xf4, 0xc3, 0x67, 0x48, 0x5b, 0x36, 0xd4,
	0xbe, 0xf3, 0x7c, 0xee, 0x66, 0x2e, 0xca, 0x07, 0xa4, 0xb3, 0x17, 0x45, 0x2a, 0x48, 0xfe, 0x22,
	0xe7, 0xfa, 0x04, 0x45, 0x32, 0xc9, 0x04, 0x3e, 0xb7, 0x50, 0xe0, 0xf3, 0x73, 0xee, 0x15, 0xde,
	0x93, 0xab, 0x58, 0xde, 0x3d, 0xdd, 0xa6, 0x35, 0xf2, 0x9c, 0xe4, 0x8c, 0x9b, 0x85, 0x5d, 0x0d,
	0x79, 0xb8, 0xb6, 0xfa, 0xb0, 0x76, 0x34, 0x74, 0x84, 0x7b, 0xfe, 0xdc, 0x0f, 0xc4, 0xa4, 0x11,
	0x3d, 0x84, 0xd2, 0x80, 0x18, 0xca, 0x95, 0x06, 0x6e, 0x32, 0xa5, 0xa8, 0xe4, 0x8b, 0x1c, 0x30,
	0x81, 0x5a, 0xd6, 0x54, 0x76, 0x49, 0xe1, 0x9e, 0x13, 0xb6, 0x6e, 0x4b, 0x22, 0x73, 0xfa, 0xfc,
	0x9c, 0xd3, 0xff, 0x1f, 0xca, 0x6e, 0xe0, 0x70, 0xee, 0x7b, 0x33, 0xdb, 0x4a, 0x2a, 0xb4, 0xbe,
	0x87, 0x95, 0xae, 0x3b, 0x7d, 0xa6, 0xfb, 0xd7, 0xce, 0xa4, 0x2c, 0xff, 0xf9, 0x79, 0xbe, 0xc0,
	0x8e, 0xaf, 0xce, 0xb2, 0x50, 0xce, 0xac, 0x08, 0xea, 0xad, 0xd3, 0x0e, 0x13, 0x3c, 0xf5, 0xe5,
	0x1e, 0x94, 0xfc, 0x98, 0x33, 0xc1, 0xcd, 0xdc, 0xae, 0x96, 0x16, 0x0e, 0xa9, 0xd8, 0x4a, 0xb0,
	0x48, 0x8b, 0x35, 0xa1, 0xcc, 0x42, 0xc1, 0x92, 0x76, 0x87, 0x82, 0x51, 0xb1, 0x53, 0xd2, 0x7a,
	0x02, 0x45, 0x42, 0xc3, 0x9c, 0x87, 0x8e, 0xea, 0x97, 0xba, 0x4d, 0x6b, 0x8c, 0xbf, 0xeb, 0x7b,
	0x09, 0x37, 0xf3, 0x54, 0x08, 0x92, 0xb0, 0x7e, 0x80, 0x8d, 0x56, 0x2c, 0x9c, 0x7e, 0xc0, 0xf8,
	0xc1, 0xb9, 0xe3, 0x87, 0x59, 0x5f, 0x5d, 0x62, 0x64, 0x7d, 0x25, 0x15, 0x5b, 0x09, 0xfe, 0x9d,
	0xaf, 0x3f, 0xe7, 0xa1, 0x48, 0x70, 0x33, 0x9d, 0x7d, 0x02, 0xba, 0xe7, 0x27, 0x4c, 0x4e, 0x45,
	0xc4, 0x5d, 0x56, 0x53, 0x11, 0x2d, 0x9a, 0x87, 0xa9, 0xc8, 0x9e, 0x68, 0xe1, 0xb5, 0x57, 0xc1,
	0xd5, 0xe8, 0x80, 0x69, 0x44, 0x37, 0xa1, 0x24, 0x9c, 0xe4, 0x8c, 0xc9, 0x8e, 0xaf, 0xdb, 0x8a,
	0x32, 0xb6, 0xa0, 0x42, 0xa3, 0xdc, 0x8d, 0x02, 0xba, 0xf0, 0xba, 0x3d, 0xa6, 0xf1, 0x64, 0x3c,
	0x1a, 0x25, 0x2e, 0xeb, 0xc5, 0x51, 0x22, 0x38, 0x75, 0x7f, 0xdd, 0xae, 0x4a, 0xde, 0x29, 0xb2,
	0x8c, 0x47, 0xb0, 0xea, 0x31, 0x2e, 0xfc, 0xd0, 0xc1, 0xdd, 0x95, 0x5e, 0x99, 0xf4, 0x1a, 0x19,
	0x01, 0x29, 0x5b, 0x16, 0xe8, 0x63, 0x9f, 0x0d, 0x1d, 0x8a, 0xad, 0xf6, 0xe9, 0xdb, 0x6e, 0x63,
	0xc9, 0x00, 0x28, 0x9d, 0xbc, 0xed, 0xe2, 0x3a, 0x67, 0x7d, 0x84, 0x6a, 0xd7, 0x1f, 0xb2, 0x49,
	0xfc, 0xa7, 0x83, 0x9b, 0xbb, 0x19, 0xdc, 0x06, 0x68, 0x9c, 0xb9, 0x14, 0x1e, 0xcd, 0xc6, 0x25,
	0x85, 0x12, 0x59, 0x1a, 0xb1, 0x68, 0x6d, 0xec, 0x42, 0xcd, 0x0d, 0x2e, 0x7a, 0xbe, 0xc7, 0x7b,
	0x43, 0x87, 0x5f, 0xa8, 0xce, 0x07, 0x6e, 0x70, 0xd1, 0xf2, 0xf8, 0x1b, 0x87, 0x5f, 0x58, 0x0c,
	0x56, 0xae, 0xbd, 0x36, 0x8c, 0xbd, 0xa9, 0x27, 0xc9, 0xf2, 0xde, 0xd6, 0x8c, 0x27, 0x49, 0x73,
	0xfa, 0x65, 0x62, 0xfd, 0x0f, 0x4a, 0xca, 0xba, 0x02, 0x85, 0x57, 0xad, 0xd7, 0xaf, 0xe5, 0x01,
	0x5f, 0x1c, 0x75, 0x4f, 0x5b, 0x87, 0x8d, 0x9c, 0xf5, 0x7b, 0x0e, 0x56, 0x8f, 0x3e, 0x32, 0xb7,
	0x23, 0x12, 0xc6, 0xc7, 0x75, 0xf6, 0x04, 0x8a, 0xdc, 0x8d, 0x62, 0xa6, 0x36, 0xda, 0xa6, 0x96,
	0x73, 0x5d, 0xab, 0xd9, 0x41, 0x15, 0x5b, 0x6a, 0x66, 0x32, 0x9a, 0x9f, 0xca, 0xe8, 0x5d, 0xd0,
	0x39, 0x59, 0x45, 0x09, 0x57, 0x2d, 0x70, 0xc2, 0xc8, 0x96, 0x62, 0x61, 0xba, 0x14, 0x77, 0xa0,
	0x48, 0xf8, 0x46, 0x1d, 0xf4, 0x83, 0x93, 0x76, 0x77, 0xbf, 0xd5, 0x3e, 0xb2, 0x1b, 0x4b, 0x46,
	0x19, 0xb4, 0xd3, 0x13, 0xf4, 0xbc, 0x0d, 0x46, 0xd6, 0x25, 0xf5, 0xa2, 0xda, 0x82, 0x8a, 0x1f,
	0x72, 0xe1, 0x84, 0x6e, 0x5a, 0xbb, 0x63, 0x5a, 0xba, 0xe2, 0x24, 0x02, 0x33, 0xaa, 0x12, 0x34,
	0x61, 0x58, 0x27, 0xb0, 0x76, 0x80, 0x6a, 0xc1, 0x74, 0x28, 0x3e, 0x1f, 0xf0, 0x8f, 0x1c, 0xac,
	0xed, 0xc7, 0x71, 0x70, 0xd5, 0x8a, 0x0e, 0xf0, 0x2d, 0x9b, 0x22, 0x9a, 0x50, 0x96, 0xc9, 0xe1,
	0x0a, 0x30, 0x25, 0x31, 0x86, 0x97, 0x51, 0x30, 0x52, 0x60, 0xba, 0xad, 0xa8, 0x1b, 0x65, 0xa7,
	0xdd, 0x2c, 0xbb, 0xac, 0x9b, 0x05, 0xf2, 0xe4, 0x16, 0x37, 0x8b, 0xd7, 0xdc, 0xcc, 0xa6, 0xa0,
	0x34, 0x9d, 0x82, 0x53, 0x58, 0x9f, 0xf6, 0xff, 0x96, 0x18, 0x6b, 0x0b, 0x87, 0xe4, 0x13, 0x40,
	0xd7, 0xcd, 0x04, 0x42, 0x13, 0x6e, 0xda, 0xca, 0x4a, 0xb2, 0x5b, 0xdb, 0xc8, 0x5a, 0xa4, 0x89,
	0x6d, 0x42, 0xc9, 0x63, 0x97, 0xbe, 0x9b, 0xce, 0x55, 0x45, 0xcd, 0xa9, 0xa8, 0x3f, 0x73, 0x90,
	0xef, 0xba, 0xc6, 0x8e, 0x1a, 0xc7, 0xb2, 0xb4, 0xab, 0x72, 0xdb, 0x66, 0xf7, 0x2a, 0x66, 0x6a,
	0x36, 0x8f, 0x5f, 0xdc, 0xf9, 0x5b, 0x5e, 0xdc, 0xea, 0xed, 0xa4, 0xcd, 0x78, 0x3b, 0xad, 0x43,
	0x91, 0x3a, 0x9c, 0x6a, 0x6b, 0x92, 0x98, 0xdb, 0xd5, 0x76, 0xa0, 0x9a, 0xe9, 0x6a, 0xaa, 0xa9,
	0xc1, 0xa4, 0xa9, 0xa1, 0x02, 0x3b, 0xc3, 0x8a, 0x94, 0x0a, 0xb2, 0x9b, 0x81, 0x64, 0xa1, 0x82,
	0xb5, 0x0b, 0x05, 0xf4, 0x1e, 0x5b, 0x58, 0xfb, 0xa8, 0x7b, 0xf4, 0xa6, 0xb1, 0x84, 0x77, 0xe6,
	0xd9, 0x7e, 0xfb, 0xf0, 0x5d, 0xeb, 0xb0, 0x7b, 0xdc, 0xc8, 0x59, 0x3f, 0xe5, 0x60, 0xad, 0xc3,
	0xc4, 0x61, 0xbb, 0xd3, 0x61, 0xc9, 0xe5, 0x64, 0x0c, 0x2f, 0xd0, 0xce, 0xf0, 0xe1, 0x1e, 0xf2,
	0x1e, 0x27, 0x3b, 0x95, 0x07, 0xdd, 0x0b, 0xb9, 0x04, 0xc2, 0x2c, 0xb0, 0x10, 0x07, 0x95, 0x9a,
	0x24, 0x8a, 0x9a, 0x93, 0x85, 0xa7, 0xb0, 0x81, 0xd7, 0xf6, 0x98, 0x05, 0x41, 0xf4, 0x2e, 0x4a,
	0x02, 0x6f, 0x71, 0x67, 0xf6, 0x7e, 0x2d, 0x41, 0x95, 0x4a, 0xf1, 0x90, 0x7e, 0x0b, 0xb1, 0x21,
	0x76, 0x98, 0xe8, 0xba, 0xdc, 0x58, 0x96, 0x69, 0x4c, 0x4b, 0x6b, 0x6b, 0xb3, 0x29, 0xff, 0x13,
	0x9b, 0xe9, 0x7f, 0x62, 0xf3, 0x08, 0xff, 0x13, 0xad, 0x25, 0xe3, 0x29, 0x54, 0x9f, 0x07, 0x23,
	0x7e, 0x2e, 0x1f, 0x01, 0xc6, 0xea, 0x78, 0xda, 0x2f, 0x60, 0x7b, 0x0c, 0xab, 0x1d, 0x26, 0xa6,
	0x47, 0xb3, 0x71, 0x87, 0x10, 0x66, 0x8d, 0xeb, 0xb9, 0x5e, 0xd4, 0xd1, 0x73, 0x7f, 0xc8, 0x4e,
	0x06, 0x03, 0x2c, 0x91, 0x15, 0x3a, 0xc0, 0x64, 0xd4, 0xcc, 0xb1, 0xfd, 0x1a, 0x56, 0x6d, 0xe6,
	0x46, 0x97, 0x2c, 0xf9, 0x3c, 0xfb, 0x6f, 0xa0, 0x3e, 0x1e, 0x1a, 0xaf, 0xfc, 0x20, 0x30, 0xd6,
	0xa7, 0xe6, 0xc8, 0xdf, 0x03, 0x7c, 0x9b, 0x19, 0x4d, 0x2f, 0x98, 0x38, 0xf5, 0xbd, 0x5b, 0x20,
	0x36, 0xae, 0x71, 0x65, 0xff, 0x20, 0x84, 0xfa, 0xa4, 0x77, 0xe3, 0x1c, 0xd8, 0x98, 0x39, 0x61,
	0xb6, 0x36, 0xaf, 0xb3, 0xc7, 0x08, 0x87, 0xb0, 0x92, 0xed, 0xd6, 0x88, 0xf1, 0x1f, 0xda, 0xed,
	0x66, 0x0b, 0x9f, 0x73, 0x92, 0x03, 0xa8, 0x65, 0x3b, 0x9c, 0x84, 0x98, 0xd1, 0xb3, 0xb7, 0xcc,
	0x9b, 0x82, 0xb1, 0x2b, 0xfb, 0x50, 0xcb, 0x5e, 0x2e, 0x09, 0x32, 0xe3, 0xba, 0xcd, 0xf1, 0xe3,
	0x25, 0xac, 0x4d, 0x5f, 0x0a, 0xe9, 0xce, 0x9d, 0xf4, 0xf8, 0x37, 0x6e, 0xcb, 0xed, 0x58, 0xfd,
	0x12, 0x71, 0xbe, 0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xce, 0xba, 0x53, 0xea, 0x41, 0x11, 0x00,
	0x00,
}
